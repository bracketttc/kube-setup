---
- name: Add rule to load br_netfilter kernel module
  become: yes
  copy:
    src: k8s.modules-load.conf
    dest: /etc/modules-load.d/k8s.conf

- name: Load br_netfilter kernel module
  become: yes
  community.general.modprobe:
    name: br_netfilter
    state: present

- name: Add syscontrol rules for Kubernetes
  become: yes
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: yes
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Turn off swap
  become: yes
  shell:
    cmd: swapoff -a

- name: Comment out swap partitions in fstab
  become: yes
  replace:
    path: /etc/fstab
    regexp: '(^[^#].*?\sswap\s+.*)$'
    replace: '# \1'

- name: Place SELinux in permissive mode
  become: yes
  ansible.posix.selinux:
    policy: targeted
    state: permissive

- name: Subscribe to Red Hat
  become: yes
  community.general.redhat_subscription:
    username: your.username.here
    password: your.password.here
    auto_attach: yes
    state: present
  when:
    - ansible_distribution == 'RedHat'

- import_tasks: docker.yml
  when: container_runtime == 'docker'

- import_tasks: crio.yml
  when: container_runtime == 'crio'

- import_tasks: containerd.yml
  when: container_runtime == 'containerd'

- name: Disable FirewallD
  become: yes
  systemd:
    name: firewalld
    state: stopped
    enabled: no

- name: Add kubernetes yum repository
  become: yes
  yum_repository:
    name: Kubernetes
    description: Google k8s packages
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude: "kubelet kubeadm kubectl"

- name: Install Kubernetes
  become: yes
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    disable_excludes: Kubernetes

- name: Start Kubelet
  become: yes
  systemd:
    name: kubelet
    state: started
    enabled: yes

- name: Initialize a Kubernetes cluster
  become: yes
  shell:
    cmd: kubeadm init --pod-network-cidr=10.10.0.0/16

- name:
  block:
    - name: Create .kube dir
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
    - name: Copy config
      become: yes
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: "{{ ansible_env.HOME }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

- name: Install OpenShift bindings for Python
  become: yes
  yum:
    name:
      - python-openshift
    state: present

- import_tasks: cni.yml
